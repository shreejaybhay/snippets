import { NextRequest, NextResponse } from "next/server";
import { connectDB } from "@/lib/db";
import { Snippet } from "@/models/snippets";
import mongoose from "mongoose";
import hljs from 'highlight.js';
import { getUserFromToken } from "@/utils/auth";

interface SnippetLean {
  _id: mongoose.Types.ObjectId;
  title: string;
  code: string;
  language: string;
  isPublic: boolean;
  userId: mongoose.Types.ObjectId;
}

export async function GET(
  request: NextRequest,
  { params }: { params: Promise<{ id: string }> }
) {
  try {
    const { id } = await params;
    await connectDB();

    const snippet = await Snippet.findById(id)
      .select('title code language isPublic userId')
      .lean<SnippetLean>();

    if (!snippet) {
      return NextResponse.json(
        { message: "Snippet not found", success: false },
        { status: 404 }
      );
    }

    // Check if the user is authorized to access this snippet
    const user = await getUserFromToken(request);
    if (!snippet.isPublic && (!user || user instanceof NextResponse || user._id.toString() !== snippet.userId.toString())) {
      return NextResponse.json(
        { message: "Unauthorized to access this snippet", success: false },
        { status: 403 }
      );
    }

    // Pre-highlight the code using highlight.js
    const highlightedCode = hljs.highlight(snippet.code, {
      language: snippet.language.toLowerCase() || "plaintext",
    }).value;

    // Generate embed HTML with Mac-style window
    const embedHTML = `
<div class="codesnippet-embed" style="font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, sans-serif;">
  <div style="
    max-width: 100%;
    border-radius: 8px;
    overflow: hidden;
    background: #1a1b1e;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
    color: #e5e7eb;
  ">
    <!-- Window Header -->
    <div style="
      display: flex;
      align-items: center;
      padding: 8px 12px;
      background: #2c2e33;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    ">
      <!-- Window Controls -->
      <div style="display: flex; gap: 6px;">
        <div style="width: 12px; height: 12px; border-radius: 50%; background: #ff5f56;"></div>
        <div style="width: 12px; height: 12px; border-radius: 50%; background: #ffbd2e;"></div>
        <div style="width: 12px; height: 12px; border-radius: 50%; background: #27c93f;"></div>
      </div>
      <!-- Title -->
      <div style="
        flex-grow: 1;
        text-align: center;
        margin-left: -42px;
        color: #a1a1aa;
        font-size: 13px;
      ">
        ${snippet.title}
      </div>
    </div>
    
    <!-- Code Content -->
    <div style="
      padding: 16px;
      overflow-x: auto;
      background: #1a1b1e;
    ">
      <pre style="
        margin: 0;
        padding: 0;
        font-family: 'JetBrains Mono', 'Fira Code', 'Cascadia Code', 'Source Code Pro', 'Menlo', 'Monaco', Consolas, 'Courier New', monospace;
        font-size: 14px;
        line-height: 1.6;
        color: #e5e7eb;
        font-feature-settings: "liga" 1, "calt" 1;
      "><code class="hljs" style="
        font-family: inherit;
        background: transparent;
        padding: 0;
        color: inherit;
      ">${highlightedCode}</code></pre>
    </div>

    <!-- Footer -->
    <div style="
      padding: 8px 12px;
      border-top: 1px solid rgba(255, 255, 255, 0.1);
      background: #2c2e33;
      display: flex;
      justify-content: flex-end;
      align-items: center;
    ">
      <span style="
        font-size: 12px;
        color: #a1a1aa;
      ">
        Generated by Snippets
      </span>
    </div>
  </div>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/styles/atom-one-dark.min.css">
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500&display=swap">
</div>`;

    // Generate enhanced markdown with title and description
    const embedMarkdown = `## ${snippet.title}
\`\`\`${snippet.language.toLowerCase()}
${snippet.code}
\`\`\`

Generated by [Snippets](https://ez-snippets-shree.vercel.app/) • ${snippet.language.toLowerCase()} • ${snippet.code.split('\n').length} lines`;

    return NextResponse.json({
      success: true,
      embedHTML,
      embedMarkdown,
      language: snippet.language,
    });
  } catch (error) {
    console.error("Error generating embed code:", error);
    return NextResponse.json(
      { message: "Error generating embed code", success: false },
      { status: 500 }
    );
  }
}



